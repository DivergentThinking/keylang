
var filescope = 17;
gvar globalscope = 23;

fn test_minmax()
{
  var a = 7, b = 9, c = 3;
  c = a =<= b; if (c != 7) debug("c != 7: ", c);
  c = a =>= b; if (c != 9) debug("c != 9: ", c);
  var d = 2, e = 10;
  c = a =<= b =<= d =<= e =<= 100;
  if (c != d) debug("c != d: ", c);
}

fn test_pause()
{
  var a;
  a = pause(); debug(a);
  a = pause(); debug(a);
  a = pause(); debug(a);
  a = pause(); debug(a);
  a = pause(); debug(a);
}

fn test_subneg()
{
  var a = - 3;
  var b = a - 2;
  if (a != -3 || b != -5) debug("subneg: -3, -5: ", a, " ", b);
}

fn test_multi()
{
  return 4 + 3 + 6 + 7;
}

fn test_short()
{
  var a = 5;
  var b;
  b && (a = 7);
  if (a == 7) debug("short: a == 7: ", a);
  b || (a = 9);
  if (a != 9) debug("short: a != 9: ", a);
  b = b ?? a;
  if (b != 9) debug("short: b != 9: ", b);
}

fn test_def()
{
  var x, y = undef, z = 5;
  z = undef;
  if (isdef(x)) debug("x isdef: ", x);
  if (isdef(y)) debug("y isdef: ", y);
  if (isdef(z)) debug("z isdef: ", z);
}

fn test_loops()
{
  var j = 1;
  var i = 0;

  //debug("loop1");
  while (i < 3) {
    j += j;
    i += 1;
  }
  if (j != 8) debug("j != 8: ", j);

  //debug("loop2");
  i = 0;
  while (i < 5) {
    if (i == 2) break;
    i += 1;
  }
  if (i != 2) debug("i != 2: ", i);

  //debug("loop3");
  i = 0;
  j = 1;
  while (i < 10) {
    i += 1;
    if (i > 3) continue;
    j += j;
  }
  if (j != 8) debug("j != 8: ", j);
  if (i != 10) debug("i != 10: ", i);
}

gfn foo0(a,b) {
  var c = a + b;
  return c;
}

fn foo1(a,b) {
  return a + b;
}

fn foo2(a,b) {
  return a += b;
}

fn main() {
  debug("testing ", 5, 23, " and more testing ", undef, ".");
  var w = foo0(filescope, globalscope);
  var x = foo1(filescope, globalscope);
  var y = foo2(filescope, globalscope);
  if (w != 40) return 'w';
  if (x != 40) return 'x';
  if (y != 40) return 'y';
  test_loops();
  test_def();
  test_subneg();
  test_pause();
  test_minmax();
  return "a happy \\ little string";
}
